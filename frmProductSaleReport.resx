<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAIACoEAAAFgAAACgAAAAgAAAAQAAAAAEAIAAAAAAAABAAAP4XAAD+FwAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACRQTkAlUQ8BoQ2LzRxKCJRayQeVGojHlZpIx1WaCIdV2gi
        HVdnIhxYZyEcWGchHFhmIRxYZSEcWGUhHFdlIRxWZCAbVmMgG1RiHxtRWBwZND4VFgZFFxcAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAoFBHAKRUSgyXSD+HiDcu6IEuJfeBLiX4gS4k+IAu
        JPiALiT4gC4k+YAuJPmALiT5gC4k+YAtJPl/LST5fy0k+H8tJPh+LST4fi0k+H0sI/d5KyLociUef2ob
        FAluHhcAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAALFaTgCiUUcAplRKYZ1IPvqnTkH/slxP/65f
        VP+tYFX/rWBW/61gVv+tYFb/rWBW/6xgVv+sYFb/rWBW/6xgVv+sYFb/rGBW/61gVv+sYFX/rmBV/7Vg
        U/+sVEb4nT4xYqJIOwCdOS0AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAs1lLAM1xYQGtVEiisVVH/7lq
        Xv+4kY3/xbe4/8m+v//Jv7//yb/A/8m/wP/Jv8D/yb/A/8m/wP/Jv8D/yb/A/8m/wP/Jv7//yb6//8i+
        vv/Iu7z/wp+c/8BzZ/+5XU6rniEPA7JMPQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACzWEoAs1pNCLJV
        R7u6YFH/xZuV/+Dh4v/q6+z/6u3t/+rt7v/q7e7/6u3u/+rt7v/q7e7/6u3u/+rs7f/q7O3/6u3u/+rt
        7v/q7e7/6uzt/+rr7P/m5+j/zZ6W/8FoWKuzNB8Du1dHAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAALJW
        SACxV0kRslRGzb1oWv/Zx8T/6uzt/+no6f/ezMb/2ryy/9q8sf/au7H/2rux/9q8sf/avLH/4MzF/+Tc
        2v/bv7b/2bux/9q8sv/j1tH/6urr/+vs7f/Ys63/wmhZmeHl4QC9WksAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAsVVHALFVRxyyVEXdwHBj/9/S0f/r7O3/6N7a/+GRaP/jhVL/44ZT/+OGU//jhlP/44ZT/+OG
        Uv/ll2v/46yS/+KEUv/jhlP/44VR/+aphv/q6Oj/6uzt/9aspf/BZlaFx3xuAL5bTQAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAACxVEYAsFRGKrNURenCeGz/4trZ/+rr7P/q5eT/6Lid/+ingv/opoP/6KaC/+im
        gv/opoL/6KaC/+ezmP/mw7P/6KiG/+img//op4P/6ce0/+rq6//q6+z/1KKa/8FkU3DEcGEAu2BXAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAALFTRQCwU0U6tFRF88WBdv/k4OD/6+zt/+bW0P/fknH/4Ylj/+GJ
        Yv/hiGL/4Yhi/+GIYv/hiGL/4Ilk/9+KZP/hiWP/4Ylj/+GJYv/krZP/6ujn/+rp6v/RmZD+wGFRXMNr
        WwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAsFNFAK9SRE20VUb6yIuA/+bk5f/q6+3/6tbM/+2f
        cf/um2n/7ptp/+6baf/um2n/7Jtp/+ubav/rm2r/65tq/+ubav/rm2r/65tp/+uzkP/q6Of/6ebn/86Q
        hvm/X05JwmdXAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACwUkQAr1FDYbVXR//LlYz/5+fo/+vr
        6//W3+P/o8HH/5+7v/+fu7//n7u+/6O+wf/S1ND/7d/X/+zf1//s39f/7N/Y/+zf2P/s4Nj/6+bj/+rr
        7P/n4uL/zIh98r9dTDfBZFQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAsVdJAK9RQwCvUUJ3t1hJ/86f
        mP/o6er/7err/6Lc5v9S3+7/V+Tx/1fk8f9X5PH/VuTx/5vl7//r7O7/6uzu/+rs7v/q7O7/6uzu/+rs
        7v/q6+v/6uvs/+bd3P/JgXXovltJKMBiUQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACwVEYAr1BBAK9R
        Qoy4W0z/0aqk/+nr7P/r6+z/z9/h/5zLyv+Zycb/mMjG/5fIxf+bx8T/xcW//+DEu//gxLv/4cS7/+HE
        u//hxbz/49DK/+no6P/q6+3/5NfV/8h7bdu+WEcawF9OAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAALBT
        RACtWE0BsFBCobleT//UtLD/6uzt/+nk4//fnX7/4IJS/+CDVP/gg1P/34BP/9ZyRv/ad0r/4oJR/+OD
        Uv/jhFL/44RS/+OEUv/jiVr/58m5/+vt7//hz8z/xnVnzL1VQxC/XUwAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAsFJEAK9SRQawUUK1u2JU/9i+u//q7e//6NbO/+eOXP/qkFn/6pBa/+mNWP/djWT/a3p+/3F/
        gf/kjlz/6pBa/+qQWv/qkFr/6pBa/+qPWP/qvqP/6+3v/9/Gwv/EcGG7uk06CL5cSwAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAACwUkQArlFEDbBRQse9aFn/28jF/+rt7//oz8L/6I5Z/+qOV//oi1f/4J18/9yt
        lP9stb3/cr/I/+GXav/qj1n/6Y9Z/+qNV//rjVf/6Y9Z/+vFr//r7vD/3L24/8NsXKevIgwCvltLAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAK9RQwCuUEIXsVFC179uYP/e0M7/6+3v/+jHtv/oi1X/yXVM/7yM
        eP/lqon/65Vg/+CYaP/isI7/6KyK/+mOWP/qjln/1XpM/7ZvTv/hilr/68y6/+vu8P/Zs63/wmhYktCa
        jwC+W0sAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAr1FDAK5QQiOxUkPkwXVo/+DX1v/q7e//6L+q/+SJ
        VP9gipD/QZ22/9iUaf/rkVv/65Fa/+uYZf/ot5z/6o5b/+yLVf+Kem7/J4+t/7aXfP/t08T/6u3v/9Wp
        of/BZVV9xnZnAL9dTwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACvUUIArlBBMrJSQ+/EfXH/493d/+rs
        7v/ot53/6I5Y/6iqlf+ct6n/45Rj/+uRW//qkVz/6pFb/+evjv+0gm7/w3dV/7Oklv+OwLr/1aJ7/+zZ
        zv/q6+3/05+W/8BjUmjEbl4AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAK9QQgCuT0FDs1NE98aG
        e//l4uL/6uvt/+iwkf/qjlf/65Nc/+uSXf/qkVz/6pFc/+qRXP/rklv/0pFr/zqatf9in67/5qeC/+yT
        Xv/rm2v/69/Y/+np6v/QlYv8wGBQU8JpWQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAr1BCAK5P
        QVa0VUX9yY+G/+fm5v/q6+3/68Go/+uVYP/rlF//65Rf/+uUX//rk17/65Nd/+yUXv/ilGT/nrKi/7yv
        kv/rlF7/65Re/+yxjf/r5+b/6OXl/82Mgfa/Xk1AwmZVAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AACvUEEArk9Aa7VWR//MmZH/6Ojp/+rr7P/p29X/57Wc/+esjf/nqIj/6KuL/+q7of/ryLP/566P/+q0
        lv/qtZn/6a6Q/+m4nP/puZ//6+Hb/+rr7P/n4N//y4V57b9cSy/BY1MAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAsFNFAK5PQACuT0B/t1lJ/8+knf/p6uv/6uzu/+fIuf/jj2X/5aB//+WWbv/lnHv/5amM/+O7
        qv/mpob/6KiG/+SZdP/klG3/5sOz/+avk//q6Oj/6uvs/+Xa2P/IfXDhvlpIIMBhUAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAACvUkQAr00+AK5PQJS4XE3/0q6o/+nr7P/q7O3/6cSv/+eQYf/pnnX/55Vq/+ae
        ef/nkGP/6Jtx/+WoiP/loH3/6Zdq/+eUaP/ipYj/5KB7/+je2f/r7O7/4tLQ/8d3adK9V0UUwF5OAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAK9RQgCsUUQCr09Ap7pfUP/WuLP/6uvt/+rr7P/r29L/68m3/+zT
        xv/tyrf/7cy7/+7LuP/u3dT/7c28/+3Ux//u0MD/7M28/+rKuv/qybb/6uHc/+vs7v/gycb/xXJjwbxS
        Pwq/XUwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAsVJDALBRQwawUEG2vGNV/9q9uf/q7O3/6urr/+rr
        7P/r7O3/1uTo/53M2/+Vx9n/lsjZ/5XH2P+WyNr/lcjZ/5jJ2v/M4Of/6+zt/+rs7f/q6+z/6+3u/9y6
        tP/EbF2stj0nA79cTAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAC1VkcArU0/ArdXSJ/AaFn/1J+V/+rm
        5f/r7e3/6+3t/+7u7v+Nz9//DKLH/wmexP8JnsT/CZ7F/wmexf8JnsX/B53E/3jF2v/t7e7/6+3t/+vt
        7f/n2tj/z46D/8VtXonMj4MAwF1OAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMZrWwDEaloAw2dXOsh0
        ZN/IeWv/05iN/9uxqv/bsqz/0Kai/1apwP8Oudf/D7fV/w+31f8Pt9X/D7fV/w+31f8LtdX/a7HB/920
        rf/ctK3/2ayj/86Lfv/JemvezHpqNMx8bADQdmkAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAM13
        ZgAGAAAA0H5tPs+AcanNf3DHzX5vych7bs2QZmf0Koyr/xG72f8Qudb/ELnW/xC51v8Qudb/ELnW/w24
        1v9emqjlzn1uyc1/cMnNfm/GzoBxpdGFdjz/pYUA14d2AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAPegggDVjn8A4ZJ+Bd2SgAzkkH0NlpOWFyWLr74Un8T/H8nh/yHL4f8hy+H/Icvh/yHL
        4f8hy+L/H8ng/yK51IP/fF0K3JKBDt6Tggzjm4kE2ox7AP/fyAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADa00wAVjLIAJ53ARC2819pY5vL5Zev1+GXr
        9fhl6/X4Zev1+GXr9fhk6vT1S9nqX1vm8gAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAFXC2QBAmb4BVtnqL2Pk
        8VZn5fFWaOXxVmfl8VZo5fFWaOXxV2rl8kpv5fEQb+byAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAA/gAAH/wAAA/8AAAP+AAAB/gAAAf4AAAP+AAAD/gAAA/4AAAP+AAAD/gA
        AA/4AAAP+AAAD/AAAA/wAAAP8AAAD/AAAB/wAAAf8AAAH/AAAB/wAAAf8AAAH/AAAB/wAAAf4AAAH+AA
        AB/gAAA/8AAAP/gAAH/8AAD//8AP///AD/8=
</value>
  </data>
</root>